services:
  rabbitmq:
    image: rabbitmq:4.0.4-management-alpine
    ports:
      - "15672:15672"
      - "5672:5672"
    networks:
      - area_network
    volumes:
      - ./rabbit-mq/rabbitmq.conf:/etc/rabbitmq/rabbitmq.conf:ro
    healthcheck:
      test: [ "CMD", "rabbitmqctl", "status" ]
      interval: 5s
      timeout: 15s
      retries: 5
    restart: unless-stopped

  mariadb:
    image: mariadb:11.4.4
    ports:
      - "3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
      MYSQL_DATABASE: ${DB_NAME}
      MYSQL_ROOT_HOST: "%"
    volumes:
      - mariadb_data:/var/lib/mysql
      - ./server/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    networks:
      - area_network
    healthcheck:
      test: [ "CMD", "mariadb-admin", "ping", "-h", "localhost", "-u", "root", "-p${DB_PASSWORD}" ]
      interval: 10s
      timeout: 5s
      retries: 5
    env_file:
      - .env
    restart: unless-stopped

  area-server:
    build:
      context: ./server
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    volumes:
      - ./ssl:/app/ssl:ro
    environment:
      DB_HOST: ${DB_HOST}
      DB_PORT: ${DB_PORT}
      DB_USER: ${DB_USER}
      DB_NAME: ${DB_NAME}
      DB_PASSWORD: ${DB_PASSWORD}
    depends_on:
      mariadb:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    networks:
      - area_network
    env_file:
      - server/.env
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 40s

  area-server-action-consumer:
    build:
      context: ./server
      dockerfile: Dockerfile_action_consumer
    volumes:
      - ./ssl:/app/ssl:ro
    environment:
      DB_HOST: ${DB_HOST}
      DB_PORT: ${DB_PORT}
      DB_USER: ${DB_USER}
      DB_NAME: ${DB_NAME}
      DB_PASSWORD: ${DB_PASSWORD}
    depends_on:
      mariadb:
        condition: service_healthy
      area-server:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    networks:
      - area_network
    env_file:
      - server/.env
    restart: unless-stopped

  area-server-reaction-consumer:
    build:
      context: ./server
      dockerfile: Dockerfile_reaction_consumer
    volumes:
      - ./ssl:/app/ssl:ro
    environment:
      DB_HOST: ${DB_HOST}
      DB_PORT: ${DB_PORT}
      DB_USER: ${DB_USER}
      DB_NAME: ${DB_NAME}
      DB_PASSWORD: ${DB_PASSWORD}
    depends_on:
      mariadb:
        condition: service_healthy
      area-server:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    networks:
      - area_network
    env_file:
      - server/.env
    restart: unless-stopped

  area-client-mobile:
    build:
      context: ./client_mobile
      dockerfile: Dockerfile
      args:
        - API_URL
        - WEB_CLIENT_URL
        - MOBILE_CLIENT_URL
        - GITHUB_CLIENT_ID
        - GITHUB_CLIENT_SECRET
    volumes:
      - area_client_data:/app/build/app/outputs/flutter-apk
    networks:
      - area_network
    env_file:
      - ./client_mobile/.env

  area-client-web:
    build:
      context: ./client_web
      dockerfile: Dockerfile
      args:
        - VITE_PORT
        - VITE_ENDPOINT
        - VITE_GOOGLE_CLIENT_ID
        - VITE_GOOGLE_CLIENT_SECRET
        - VITE_MICROSOFT_CLIENT_ID
        - VITE_LINKEDIN_CLIENT_ID
        - VITE_LINKEDIN_CLIENT_SECRET
        - VITE_SPOTIFY_CLIENT_ID
        - VITE_SPOTIFY_CLIENT_SECRET
        - API_URL
        - WEB_CLIENT_URL
        - MOBILE_CLIENT_URL
        - GITHUB_CLIENT_ID
        - GITHUB_CLIENT_SECRET
    ports:
      - "${VITE_PORT}:${VITE_PORT}"
    volumes:
      - area_client_data:/usr/share/nginx/html/mobile_builds:ro
    depends_on:
      - area-client-mobile
      - area-server
    networks:
      - area_network
    env_file:
      - ./client_web/.env
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "wget --no-verbose --tries=1 --spider --no-check-certificate https://localhost:${VITE_PORT} || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s

  healthcheck-reporter:
    image: alpine:3.20.3
    depends_on:
      area-server:
        condition: service_healthy
      area-client-web:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
      mariadb:
        condition: service_healthy
    command: |
      sh -c '
        echo "üöÄ All services are up and running!"
        echo "üì± Web client is available at: https://localhost:${VITE_PORT}"
        echo "‚öôÔ∏è  API is available at: http://localhost:8080"
        echo "üê∞ RabbitMQ management UI is available at: http://localhost:15672"
      '
    environment:
      - VITE_PORT=${VITE_PORT}

volumes:
  area_client_data:
  mariadb_data:

networks:
  area_network:
    driver: bridge
