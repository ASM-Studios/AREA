# Development stage
FROM golang:1.23.4-alpine AS development

WORKDIR /app

RUN apk add --no-cache wget git

RUN go install github.com/air-verse/air@latest

COPY go.mod go.sum ./
RUN go mod download

COPY . .

EXPOSE 8080

CMD ["air", "-c", ".air.toml.action_consumer"]

# Production stage
FROM golang:1.23.4-alpine AS production

WORKDIR /app

COPY go.mod go.sum ./

RUN go mod download

COPY . .

RUN CGO_ENABLED=0 GOOS=linux go build -o action_consumer cmd/action_consumer/main.go

CMD ["./action_consumer"]

# Final stage
FROM alpine:3.20.3

RUN apk add --no-cache ca-certificates wget && \
    adduser -D appuser

WORKDIR /app

COPY --from=production /app/action_consumer .
COPY --from=production /app/config.json .

RUN chown -R appuser:appuser /app && \
    chmod +x /app/action_consumer

USER appuser

EXPOSE 8080

CMD ["./action_consumer"]
